---
import Layout from "@/layouts/Layout.astro";
import Card from "@/components/Card.astro";
import { getCollection } from "astro:content";
import type { Page, PaginateFunction } from "astro";
import Pagination from "@/components/pagination/Pagination.astro";
import type { Thought } from "@/types/Card";
import { isCollectionEmpty } from "@/content.config";
import type { CollectionName } from "@/types/Collection";

interface Props {
  page: Page<Thought>;
}

const collectionUsed: CollectionName = "thoughts";
const isEmpty = await isCollectionEmpty(collectionUsed);
if (isEmpty) {
  console.warn(`${collectionUsed} collection is empty`);
  return Astro.rewrite("/404");
}

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const thoughts = (await getCollection("thoughts")).map(
    (thought) =>
      ({
        url: `/thought/${thought.id}`,
        title: thought.data.title,
        created: thought.data.created,
      }) as Thought,
  );

  return paginate(thoughts, { pageSize: 2 });
}

const { page } = Astro.props;

const title = "Thoughts";
const description = "Thoughts";
---

<Layout title={title} description={description}>
  <h1>Thoughts</h1>
  {page.data.map((thought) => <Card url={thought.url} title={thought.title} />)}
  <Pagination page={page} />
</Layout>
