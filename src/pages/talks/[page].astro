---
import { getCollection } from "astro:content";
import type { Page, PaginateFunction } from "astro";
import type { CardItem } from "../../components/card/types";
import type { CollectionName } from "../../content.config";
import { isCollectionEmpty } from "../../content.config";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/card/Card.astro";
import Pagination from "../../components/pagination/Pagination.astro";

interface Props {
  page: Page<CardItem>;
}

const collectionUsed: CollectionName = "talks";
const isEmpty = await isCollectionEmpty(collectionUsed);
if (isEmpty) {
  console.warn(`${collectionUsed} collection is empty`);
  return Astro.rewrite("/404");
}

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const talks = (await getCollection("talks")).map(
    (talk) =>
      ({
        url: `/talks/${talk.id}`,
        title: talk.data.title,
        description: talk.data.description,
      }) as CardItem,
  );

  return paginate(talks, { pageSize: 2 });
}

const { page } = Astro.props;
const title = "Talks";
const description = "Projects";
---

<Layout title={title} description={description}>
  <h1>Talks</h1>
  {
    page.data.map((talk) => (
      <Card url={talk.url} title={talk.title} description={talk.description} />
    ))
  }
  <Pagination page={page} />
</Layout>
